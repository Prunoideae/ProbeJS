{
    "probejs.already_running": "已经有一个转储线程在运行，请稍候",
    "probejs.dump.start": "ProbeJS 类型生成已启动",
    "probejs.dump.snippets_generated": "VSCode 快捷脚本已生成",
    "probejs.dump.mod_changed": "检测到模组环境变动",
    "probejs.dump.decompiling": "反编译模组中，这可能需要一段时间",
    "probejs.dump.decompiled_x_class": "已反编译 %s 个类",
    "probejs.dump.class_discovered": "已发现需要生成类型文件的 %s 个类",
    "probejs.dump.dump_finished": "脚本类型 %s 的生成已完成",
    "probejs.dump.dump_error": "脚本类型 %s 的生成失败了，这大概可能也许是一个 bug…",
    "probejs.dump.report_progress": "生成类型文件中……当前进度：",
    "probejs.dump.cleaning": "清理上一版本的类型文件中……这可能需要一点时间",
    "probejs.hello": "欢迎来到 ProbeJS。ProbeJS 将会在注册表出现变动时重新生成类型文件",
    "probejs.enabled_warning": "ProbeJS 正在运行！在你导出整合包之前，请排除生成的类型文件，并使用命令关闭 ProbeJS：",
    "probejs.bye_bye": "ProbeJS 已被关闭。require() 仍可正常运行。记得不要打包类型文件",
    "probejs.removed_script": "已清理脚本类型 %s 的类型文件",
    "probejs.hello_again": "ProbeJS 已开启，祝你生活美满",
    "probejs.isolation": "ProbeJS 将会隔离脚本作用域，只有具有 export 关键字的方法 / 变量可被其他脚本访问",
    "probejs.no_isolation": "ProbeJS 现在不会隔离脚本作用域，请小心变量名污染",
    "probejs.wiki": "需要 ProbeJS 教程的话，请点击：",
    "probejs.lint_passed": "恭喜你，你的代码经受住了考验",
    "probejs.interactive": "ProbeJS 交互式服务器正在监听端口 %s",
    "probejs.complete": "ProbeJS 现在将转储所有复杂类型，但会降低 VSCode 的性能",
    "probejs.no_complete": "ProbeJS 现在会禁用转储中的某些类型，因此您的 VSCode 运行速度会更快。使用片段来处理缺少的类型",
    "probejs.performance": "你安装了 %s mods！为了提高性能，某些功能被禁用，但可能并不多",
    "probejs.decompile": "ProbeJS 会在下一次转储时反编译模块源代码，当模块列表发生变化时也会触发反编译",
    "probejs.no_decompile": "ProbeJS 现在不会反编译 MOD 源代码了"
}
